// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "shopping_list.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ShoppingList } from "./shopping_list";
import type { getShoppingListResponse } from "./shopping_list";
import type { getShoppingListRequest } from "./shopping_list";
import type { deleteShoppingListResponse } from "./shopping_list";
import type { deleteShoppingListRequest } from "./shopping_list";
import type { updateShoppingListResponse } from "./shopping_list";
import type { updateShoppingListRequest } from "./shopping_list";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CreateShoppingListResponse } from "./shopping_list";
import type { CreateShoppingListRequest } from "./shopping_list";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service ShoppingList
 */
export interface IShoppingListClient {
    /**
     * @generated from protobuf rpc: createShoppingList(CreateShoppingListRequest) returns (CreateShoppingListResponse);
     */
    createShoppingList(input: CreateShoppingListRequest, options?: RpcOptions): UnaryCall<CreateShoppingListRequest, CreateShoppingListResponse>;
    /**
     * @generated from protobuf rpc: updateShoppingList(updateShoppingListRequest) returns (updateShoppingListResponse);
     */
    updateShoppingList(input: updateShoppingListRequest, options?: RpcOptions): UnaryCall<updateShoppingListRequest, updateShoppingListResponse>;
    /**
     * @generated from protobuf rpc: deleteShoppingList(deleteShoppingListRequest) returns (deleteShoppingListResponse);
     */
    deleteShoppingList(input: deleteShoppingListRequest, options?: RpcOptions): UnaryCall<deleteShoppingListRequest, deleteShoppingListResponse>;
    /**
     * @generated from protobuf rpc: getShoppingList(getShoppingListRequest) returns (getShoppingListResponse);
     */
    getShoppingList(input: getShoppingListRequest, options?: RpcOptions): UnaryCall<getShoppingListRequest, getShoppingListResponse>;
}
/**
 * @generated from protobuf service ShoppingList
 */
export class ShoppingListClient implements IShoppingListClient, ServiceInfo {
    typeName = ShoppingList.typeName;
    methods = ShoppingList.methods;
    options = ShoppingList.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: createShoppingList(CreateShoppingListRequest) returns (CreateShoppingListResponse);
     */
    createShoppingList(input: CreateShoppingListRequest, options?: RpcOptions): UnaryCall<CreateShoppingListRequest, CreateShoppingListResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateShoppingListRequest, CreateShoppingListResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: updateShoppingList(updateShoppingListRequest) returns (updateShoppingListResponse);
     */
    updateShoppingList(input: updateShoppingListRequest, options?: RpcOptions): UnaryCall<updateShoppingListRequest, updateShoppingListResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<updateShoppingListRequest, updateShoppingListResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: deleteShoppingList(deleteShoppingListRequest) returns (deleteShoppingListResponse);
     */
    deleteShoppingList(input: deleteShoppingListRequest, options?: RpcOptions): UnaryCall<deleteShoppingListRequest, deleteShoppingListResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<deleteShoppingListRequest, deleteShoppingListResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: getShoppingList(getShoppingListRequest) returns (getShoppingListResponse);
     */
    getShoppingList(input: getShoppingListRequest, options?: RpcOptions): UnaryCall<getShoppingListRequest, getShoppingListResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<getShoppingListRequest, getShoppingListResponse>("unary", this._transport, method, opt, input);
    }
}
